# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.ruby.source':
  'require \'...\'':
    'prefix': 'req'
    'body': 'require \'$0\''
  'require_relative \'...\'':
    'prefix': 'reqr'
    'body': 'require_relative \'$0\''
  'each do...end':
    'prefix': 'each'
    'body': 'each do |${1:param}|\n\t$2\nend'
  'env var':
    'prefix': 'env'
    'body': 'ENV[\'${1:ENV_VAR}\']$2'
  'File.write("...")':
    'prefix': 'Filew'
    'body': 'File.write(${1:"${2:path/to/file}"}, ${3:content})'
  'debug with pry':
    'prefix': 'pry'
    'body': '# --- breakpoint ---\nrequire \'pry\'; binding.pry\n# --- breakpoint ---'
  'debug with pry (EOF)':
    'prefix': 'prye'
    'body': '# --- breakpoint ---\nrequire \'pry\'; binding.pry\n# --- breakpoint ---\nexit'

'.python.source':
  'env var':
    'prefix': 'env'
    'body': 'os.environ[\'${1:ENV_VAR}\']$2'
  'File read':
    'prefix': 'file'
    'body': "with open(${1:'${2:path/to/file}'}) as file:\n\t${3:var} = file.read()"
  'File write':
    'prefix': 'filew'
    'body': "with open(${1:'${2:path/to/file}'}, 'w') as file:\n\tfile.write(${3:content})"
  'debug with pdb':
    'prefix': 'break'
    'body': '# --- breakpoint ---\nbreakpoint()\n# --- breakpoint ---'
  'exit script':
    'prefix': 'exit'
    'body': 'import sys; sys.exit()'
  'import up':
    'prefix': 'importup'
    'body': "import sys, os; sys.path.append(os.path.join(os.path.dirname(__file__), '..'))"

'.php.source':
  'function â€¦':
    'prefix': 'fun'
    'body': '${1:public }function ${2:functionName}(${3:}) {\n\t${0:}\n}'
  'disable idea snippet':
    'prefix': 'idea'
    'disabled': true

'.html.php.text':
  'disable idea snippet':
    'prefix': 'idea'
    'disabled': true

'.html.text':
  'Div':
    'prefix': 'div'
    'body': '<div ${1:class}="$2">\n\t$3\n</div>'

'.sql.source':
  'jinja ref':
    'prefix': 'ref'
    'body': '{{ ref(\'${1:model}\') }}$2'
